buildscript {
	repositories {
		maven { url 'https://repo.grails.org/grails/core' }
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
		classpath 'org.grails.plugins:hibernate5:7.3.0'
		classpath 'org.grails.plugins:views-gradle:2.3.2'
		classpath 'org.owasp:dependency-check-gradle:7.0.4.1'
		classpath 'org.grails.plugins:database-migration:4.2.0'
	}
}

version "0.1.0"
group "com.filequotacontrol.app"

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'org.grails.grails-web'
apply plugin: 'org.grails.plugins.views-json'
apply plugin: 'org.owasp.dependencycheck'

// Important: run tests before to run the report!
jacocoTestReport {
	reports {
		xml.required = true
		csv.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
				'com/filequotacontrol/db/load/**',
				'com/filequotacontrol/app/domain/**',
				'com/filequotacontrol/app/Application*',
				'com/filequotacontrol/app/UrlMappings*',
				'**/*_closure*',
				'**/*Enum*'
			])
		}))
	}
}

repositories {
	maven { url "https://repo.grails.org/grails/core" }
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

sourceSets {
	main {
		resources {
			srcDir 'grails-app/migrations'
		}
	}
}

dependencies {
	developmentOnly('org.springframework.boot:spring-boot-devtools')

	console 'org.grails:grails-console'

	implementation 'org.springframework.boot:spring-boot-starter-logging'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-autoconfigure'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'org.grails:grails-core'
	implementation 'org.grails:grails-plugin-url-mappings'
	implementation 'org.grails:grails-plugin-rest'
	implementation 'org.grails:grails-plugin-codecs'
	implementation 'org.grails:grails-plugin-interceptors'
	implementation 'org.grails:grails-plugin-services'
	implementation 'org.grails:grails-plugin-datasource'
	implementation 'org.grails:grails-plugin-databinding'
	implementation 'org.grails:grails-web-boot'
	implementation 'org.grails:grails-logging'
	implementation 'org.grails.plugins:cache'
	implementation 'org.grails.plugins:async'
	implementation 'org.grails.plugins:events'
	implementation 'org.grails.plugins:hibernate5'
	implementation 'org.hibernate:hibernate-core'
	implementation 'org.hibernate:hibernate-ehcache'
	implementation 'org.grails.plugins:views-json'
	implementation 'org.grails.plugins:views-json-templates'
	implementation 'org.springframework.security:spring-security-core:5.8.3'
	implementation 'org.grails.plugins:database-migration:4.2.0'
	implementation 'org.liquibase:liquibase-core:4.19.0'

	profile 'org.grails.profiles:rest-api'

	runtimeOnly 'org.apache.tomcat:tomcat-jdbc'
	runtimeOnly 'org.codehaus.groovy:groovy:3.0.11'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.0.8'

	testImplementation 'org.grails:grails-gorm-testing-support'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.grails:grails-web-testing-support'
	testImplementation 'org.grails:views-json-testing-support'
	testImplementation 'org.hibernate.validator:hibernate-validator:6.1.7.Final'
	testImplementation 'org.grails.plugins:geb'
}

bootRun {
	ignoreExitValue true
	jvmArgs(
		'-Dspring.output.ansi.enabled=always',
		'-noverify',
		'-XX:TieredStopAtLevel=1',
		'-Xmx1024m')
	sourceResources sourceSets.main
	String springProfilesActive = 'spring.profiles.active'
	systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

dependencyCheck {
	failBuildOnCVSS = 9 // 9: critical (https://nvd.nist.gov/vuln-metrics/cvss)
	format = 'HTML'
	suppressionFile = "${ projectDir }/owasp-suppressions.xml"
	data {
		directory = "${ rootProject.projectDir }/.national-vulnerability-database"
	}
	analyzers {
		nuspecEnabled = false
		assemblyEnabled = false
		msbuildEnabled = false
		nodeEnabled = false
		nodeAudit {
			enabled = false
		}
		retirejs {
			enabled = false
		}
	}
}

springBoot {
    mainClass = "com.filequotacontrol.app.Application"
}

tasks.withType(GroovyCompile) {
	configure(groovyOptions) {
		forkOptions.jvmArgs = ['-Xmx1024m']
	}
}

tasks.withType(Test) {
	useJUnitPlatform()
}
